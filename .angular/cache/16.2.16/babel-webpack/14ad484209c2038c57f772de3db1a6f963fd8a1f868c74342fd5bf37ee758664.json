{"ast":null,"code":"import { products } from \"../../../products\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/cart-service/cart.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProductDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.product.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, ctx_r0.product.price, \"EUR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.product.description);\n  }\n}\nexport class ProductDetailsComponent {\n  constructor(route, cartService) {\n    this.route = route;\n    this.cartService = cartService;\n  }\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    console.log(routeParams);\n    const productIdFromRoute = Number(routeParams.get(\"productId\"));\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n  static {\n    this.ɵfac = function ProductDetailsComponent_Factory(t) {\n      return new (t || ProductDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CartService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductDetailsComponent,\n      selectors: [[\"app-product-details\"]],\n      decls: 3,\n      vars: 1,\n      consts: [[4, \"ngIf\"]],\n      template: function ProductDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Product Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, ProductDetailsComponent_div_2_Template, 8, 6, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.product);\n        }\n      },\n      dependencies: [i3.NgIf, i3.CurrencyPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["products","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","product","name","ɵɵpipeBind2","price","description","ProductDetailsComponent","constructor","route","cartService","ngOnInit","routeParams","snapshot","paramMap","console","log","productIdFromRoute","Number","get","find","id","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CartService","selectors","decls","vars","consts","template","ProductDetailsComponent_Template","rf","ctx","ɵɵtemplate","ProductDetailsComponent_div_2_Template","ɵɵproperty"],"sources":["/Users/lozarlo/Documents/workspace/keypartner/zses5b9s-fsxpmtrf/src/app/components/product-components/product-details/product-details.component.ts","/Users/lozarlo/Documents/workspace/keypartner/zses5b9s-fsxpmtrf/src/app/components/product-components/product-details/product-details.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Product, products } from \"../../../products\";\nimport { CartService } from \"src/app/services/cart-service/cart.service\";\n\n@Component({\n  selector: \"app-product-details\",\n  templateUrl: \"./product-details.component.html\",\n  styleUrls: [\"./product-details.component.css\"],\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: Product | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cartService: CartService) {}\n\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    console.log(routeParams);\n    const productIdFromRoute = Number(routeParams.get(\"productId\"));\n\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find((product) => product.id === productIdFromRoute);\n  }\n}\n","<h2>Product Details</h2>\n\n<div *ngIf=\"product\">\n    <h3>{{ product.name }}</h3>\n    <h4>{{ product.price | currency:'EUR' }}</h4>\n    <p>{{ product.description }}</p>\n</div>"],"mappings":"AAEA,SAAkBA,QAAQ,QAAQ,mBAAmB;;;;;;;ICArDC,EAAA,CAAAC,cAAA,UAAqB;IACbD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7CH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAF5BH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAC,IAAA,CAAkB;IAClBR,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAS,WAAA,OAAAH,MAAA,CAAAC,OAAA,CAAAG,KAAA,SAAoC;IACrCV,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAI,WAAA,CAAyB;;;ADKhC,OAAM,MAAOC,uBAAuB;EAGlCC,YACUC,KAAqB,EACrBC,WAAwB;IADxB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAErCC,QAAQA,CAAA;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ;IAChDC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;IACxB,MAAMK,kBAAkB,GAAGC,MAAM,CAACN,WAAW,CAACO,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACjB,OAAO,GAAGR,QAAQ,CAAC0B,IAAI,CAAElB,OAAO,IAAKA,OAAO,CAACmB,EAAE,KAAKJ,kBAAkB,CAAC;EAC9E;;;uBAfWV,uBAAuB,EAAAZ,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA7B,EAAA,CAAA2B,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAvBnB,uBAAuB;MAAAoB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVpCtC,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,sBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAExBH,EAAA,CAAAwC,UAAA,IAAAC,sCAAA,iBAIM;;;UAJAzC,EAAA,CAAAI,SAAA,GAAa;UAAbJ,EAAA,CAAA0C,UAAA,SAAAH,GAAA,CAAAhC,OAAA,CAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}